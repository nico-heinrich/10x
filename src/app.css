@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  src: url("./lib/assets/fonts/spline-sans-mono-v10-latin-regular.woff2");
  font-family: "Spline Sans Mono";
  font-weight: 400;
}

@font-face {
  src: url("./lib/assets/fonts/spline-sans-mono-v10-latin-500.woff2");
  font-family: "Spline Sans Mono";
  font-weight: 500;
}

body {
  @apply bg-primary text-secondary font-mono;
}

.container {
  @apply mx-auto max-w-screen-xl px-4 sm:px-8;
}

.button {
  position: relative;
  box-shadow: 0 0 0 2px theme("colors.secondary") inset,
                0 3px theme("colors.secondary / 50%");
  padding: theme("spacing.4") theme("spacing.6");
  border-radius: theme("borderRadius.lg");
  background-color: theme("colors.primary");
  text-align: center;
  transform: translateY(-3px);
  transition: all .1s;
  appearance: none;
  outline: none;
  touch-action: none;
  user-select: none;
}

.button:disabled {
  opacity: .5;
}

.button:not(:disabled):active {
  box-shadow: 0 0 0 2px theme("colors.secondary") inset;
  transform: translateY(0);
}

@media (hover: hover) {
  .button {
    box-shadow: 0 0 0 2px theme("colors.secondary") inset;
    transform: translateY(0);
    white-space: nowrap;
  }


  .button:not(:disabled):hover,
  .button:not(:disabled):focus-visible {
    box-shadow: 0 0 0 2px theme("colors.secondary") inset,
                0 3px theme("colors.secondary / 50%");
    transform: translateY(-3px);
  }

  .button:not(:disabled):active {
    box-shadow: 0 0 0 2px theme("colors.secondary") inset;
    transform: translateY(0);
  }
}

.icon-button {
  display: inline-flex;
  padding: theme("spacing.2");
  margin: calc(theme("spacing.2") * -1);
  border-radius: 9999px;
  touch-action: none;
  outline: none;
}

.icon-button:active {
  background-color: theme("colors.secondary / 15%");
}

@media (hover: hover) {

  .icon-button:focus-visible,
  .icon-button:hover {
    background-color: theme("colors.secondary / 15%");
  }
}

dialog {
  transform: translateY(2rem);
  opacity: 0;
  transition: all .2s ease allow-discrete;
}

dialog::backdrop {
  background-color: theme("colors.primary");
  opacity: 0;
  transition: opacity .2s ease allow-discrete;
}

dialog[open] {
  transform: scale(1) translateY(0);
  opacity: 1;
}

dialog[open]::backdrop {
  opacity: .5;
}

@starting-style {
  dialog[open] {
    transform: translateY(2rem);
    opacity: 0;
  }

  dialog[open]::backdrop {
    opacity: 0;
  }
}

.prose,
.prose * {
  color: theme("colors.secondary") !important;
}
